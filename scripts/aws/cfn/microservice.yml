AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcEgressSubnetsIds:
    Type: String
    Description: subnets where to install PN-CORE

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  # Logging parameters
  WireTapLogActivation:
    Type: String
    Default: false
    Description: Activation of wire logs
    AllowedValues:
      - true
      - false

  PnCronAnalyzer:
    Type: String
    Default: '-'
    Description: Cron for which you send the metric to CloudWatch

  # EFS parameters
  FargateEFSFileSystemID:
    Type: String
    Description: "EFS Filesystem"

  MountEfs:
    Type: String
    Default: false
    AllowedValues:
      - "true"
      - "false"

  # Autoscaling parameters
  AutoscalingThreshold:
    Default: 70
    Type: String

  AutoscalingCheckPeriod:
    Default: 60
    Type: Number
    Description: minimum autoscaling number of tasks

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  MinTasksNumber:
    Default: 1
    Type: Number
    Description: minimum autoscaling number of tasks

  MaxTasksNumber:
    Default: 6
    Type: Number
    Description: maximum autoscaling number of tasks

  MilClientId:
    Type: String
    Description: 'Client id for the MIL service'

  MilBasePath:
    Type: String
    Description: 'Base path for the MIL service'

  MilTokenExpirationBuffer:
    Type: String
    Description: 'Token expiration buffer for the MIL service (expressed in milliseconds)'

  EmdCoreBasePath:
    Type: String
    Description: 'Base path for the EMD Core service'

  OriginalMessageUrl:
    Type: String
    Description: 'URL to retrieve original message'

  EmdPaymentEndpoint:
    Type: String
    Description: 'URL to perform a payment on a TPP service'

  CourtesyMessageContent:
    Type: String
    Description: 'Courtesy message content'

  # Logging parameters
  EcsLogGroup:
    Type: String
    Description: Log group for ECS

  LogAlarmStrategy:
    Type: String
    Description: Log alarm strategy
    Default: 'FATAL'

  # Redis parameters
  RedisServerlessArn:
    Type: String
    Description: 'RedisServerless ARN'

  ElasticCacheEmdIntegrationUserArn:
    Type: String
    Description: 'ElastiCacheUser for emd-integration'

  ElasticacheEndpoint:
    Type: String
    Description: elasticache endpoint

  ElasticacheMode:
    Type: String
    Description: elasticache mode
    Default: serverless
    AllowedValues:
      - serverless
      - managed

  ElasticacheUserId:
    Type: String
    Description: the username to connect to elasticache

  ElasticacheCacheName:
    Type: String
    Description: the name of the cache

  ElasticacheCacheRegion:
    Type: String
    Description: the region of the cache

  ElasticachePort:
    Type: String
    Description: the port of the cache

  ElasticacheSecurityGroup:
    Type: String
    Description: Elasticache security group

  RetrievalPayloadCacheTtl:
    Type: String
    Description: 'TTL for the retrieval payload entries in cache'
    Default: '10m'

Resources:

  # PN-TemplateBeMs microservice
  EmdIntegrationMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-emd-integration'
        CpuValue: 512
        MemoryAmount: 2GB
        HealthCheckPath: /actuator
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        EfsFilesystem: !Ref FargateEFSFileSystemID
        MountEfs: !Ref MountEfs
        WireTapLogActivation: !Ref WireTapLogActivation
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_CRON_ANALYZER=${PnCronAnalyzer}'
        ContainerEnvEntry3: !Sub 'WIRE_TAP_LOG=${WireTapLogActivation}'
        ContainerEnvEntry5: !Sub 'PN_EMDINTEGRATION_MILCLIENTID=${MilClientId}'
        ContainerEnvEntry6: !Sub 'PN_EMDINTEGRATION_MILBASEPATH=${MilBasePath}'
        ContainerEnvEntry7: !Sub 'PN_EMDINTEGRATION_MILTOKENEXPIRATIONBUFFER=${MilTokenExpirationBuffer}'
        ContainerEnvEntry8: !Sub 'PN_EMDINTEGRATION_CORSALLOWEDDOMAINS=${CorsAllowedDomains}'
        ContainerEnvEntry9: !Sub 'PN_EMDINTEGRATION_REDISCACHE_HOSTNAME=${ElasticacheEndpoint}'
        ContainerEnvEntry10: !Sub 'PN_EMDINTEGRATION_REDISCACHE_PORT=${ElasticachePort}'
        ContainerEnvEntry11: !Sub 'PN_EMDINTEGRATION_REDISCACHE_USERID=${ElasticacheUserId}'
        ContainerEnvEntry12: !Sub 'PN_EMDINTEGRATION_REDISCACHE_CACHENAME=${ElasticacheCacheName}'
        ContainerEnvEntry13: !Sub 'PN_EMDINTEGRATION_REDISCACHE_CACHEREGION=${ElasticacheCacheRegion}'
        ContainerEnvEntry14: !Sub 'PN_EMDINTEGRATION_REDISCACHE_MODE=${ElasticacheMode}'
        ContainerEnvEntry15: !Sub 'PN_EMDINTEGRATION_RETRIEVALPAYLOADCACHETTL=${RetrievalPayloadCacheTtl}'
        ContainerEnvEntry16: !Sub 'PN_EMDINTEGRATION_EMDCOREBASEPATH=${EmdCoreBasePath}'
        ContainerEnvEntry17: !Sub 'PN_EMDINTEGRATION_ORIGINALMESSAGEURL=${OriginalMessageUrl}'
        ContainerEnvEntry18: !Sub 'PN_EMDINTEGRATION_COURTESYMESSAGECONTENT=${CourtesyMessageContent}'
        ContainerEnvEntry19: !Sub 'PN_EMDINTEGRATION_EMDPAYMENTENDPOINT=${EmdPaymentEndpoint}'
        ContainerSecret1: !Sub 'PN_EMDINTEGRATION_MILCLIENTSECRET=arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pn-emd-integration:MilAuthClientSecret:AWSCURRENT:'
        MappedPaths: '/emd-integration-private/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref VpcEgressSubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref ElasticacheSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        EcsLogGroup: !Ref EcsLogGroup
        LogAlarmStrategyV1: !Ref LogAlarmStrategy
        TaskRoleManagedPolicyArn: !Ref EmdIntegrationMicroserviceTaskManagedPolicy

  EmdIntegrationMicroserviceTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: RedisAuth
            Action:
              - elasticache:Connect
            Effect: Allow
            Resource:
              - !Ref RedisServerlessArn
              - !Ref ElasticCacheEmdIntegrationUserArn

  ## Dashboard
  EmdIntegrationMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-emd-integration"
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-emd-integration'